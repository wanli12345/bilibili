version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: wanli_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root123456}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-wanli_video}
      MYSQL_USER: ${MYSQL_USER:-wanli_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-wanli123456}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - wanli_network
    command: --default-authentication-plugin=mysql_native_password

  # Flask应用服务
  web:
    build: .
    container_name: wanli_web
    restart: unless-stopped
    environment:
      - FLASK_APP=main.py
      - FLASK_ENV=production
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE:-wanli_video}
      - MYSQL_USER=${MYSQL_USER:-wanli_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-wanli123456}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here-change-in-production}
    ports:
      - "5000:5000"
    volumes:
      - ./static:/app/static
    depends_on:
      - mysql
    networks:
      - wanli_network

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: wanli_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - web
    networks:
      - wanli_network

volumes:
  mysql_data:

networks:
  wanli_network:
    driver: bridge 